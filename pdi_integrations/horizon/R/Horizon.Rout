
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> Alku <- Sys.time() #Tallennetaan aloitusaika
> 
> #---------------------------#
> 
> #        load packages      #
> 
> #---------------------------#
> 
> library(httr)
Warning message:
package 'httr' was built under R version 3.5.3 
> library(jsonlite)
Warning message:
package 'jsonlite' was built under R version 3.5.3 
> #library(tidyverse)
> library(plyr)
Warning message:
package 'plyr' was built under R version 3.5.3 
> library(purrr)

Attaching package: 'purrr'

The following object is masked from 'package:plyr':

    compact

The following object is masked from 'package:jsonlite':

    flatten

Warning message:
package 'purrr' was built under R version 3.5.3 
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:plyr':

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

Warning message:
package 'dplyr' was built under R version 3.5.3 
> library(tidyr)
Warning message:
package 'tidyr' was built under R version 3.5.3 
> 
> 
> #---------------------------#
> 
> #        load data          #
> 
> #---------------------------#
> 
> # projects 
> data = read.csv("http://cordis.europa.eu/data/cordis-h2020projects.csv", header = TRUE, sep = ";", encoding="UTF-8")
> 
> # organisations + EC contribution per project
> 
> data2 = read.csv("http://cordis.europa.eu/data/cordis-h2020organizations.csv", header = TRUE, sep = ";", encoding="UTF-8")
> 
> # country codes
> data3 = read.csv("http://cordis.europa.eu/data/reference/cordisref-countries.csv", header = TRUE, sep = ";", encoding="UTF-8")
> 
> # organisation type codes
> data4 = read.csv("http://cordis.europa.eu/data/reference/cordisref-organizationActivityType.csv", header = TRUE, sep = ";", encoding="UTF-8")
> 
> #---------------------------#
> 
> #     data pre-processing   #
> 
> #---------------------------#
> 
> data <- within(data, rm(projectUrl, participants, participantCountries, subjects))
> data2 <- within(data2, rm(organizationUrl, contactForm, contactType, contactTitle, contactFirstNames, contactLastNames, contactFunction, contactTelephoneNumber, contactFaxNumber, street, city, postCode, vatNumber))
> data3 <- subset(data3, language == 'en', select=c(X.U.FEFF.euCode,isoCode, name))
> data4 <- subset(data4, language == 'en', select=c(Code, Title))
> 
> ##### Kirjoitetaan csv-tiedostot #####
> 
> write.csv2(data,"D:/pdi_integrations/data/horizon/horizon_projects.csv",row.names = FALSE, na="", fileEncoding = "UTF-8")
> write.csv2(data2,"D:/pdi_integrations/data/horizon/horizon_organisations.csv",row.names = FALSE, na="", fileEncoding = "UTF-8")
> write.csv2(data3,"D:/pdi_integrations/data/horizon/horizon_country_codes.csv",row.names = FALSE, na="", fileEncoding = "UTF-8")
> write.csv2(data4,"D:/pdi_integrations/data/horizon/horizon_org_type_codes.csv",row.names = FALSE, na="", fileEncoding = "UTF-8")
> 
> ##### Nimetään organisaatiot uudestaan (mm. kyrilliset aakkoset) #####
> 
> data2 = read.csv("D:/pdi_integrations/data/horizon/horizon_organisations.csv", header = TRUE, sep = ";", encoding="UTF-8", stringsAsFactors = FALSE)
> ind_name <- which(grepl("<", data2$name), arr.ind = TRUE)
> ind_shortName <- which(grepl("<", data2$shortName), arr.ind = TRUE)
> 
> for (i in 1:length(ind_name)){
+   data2[ind_name[i],6] <- "Unknown"
+ }
> for (i in 1:length(ind_shortName)){
+   data2[ind_shortName[i],7] <- "Unknown"
+ }
> 
> write.csv2(data2,"D:/pdi_integrations/data/horizon/horizon_organisations.csv",row.names = FALSE, na="", fileEncoding ="UTF-8")
> 
> ##### Kesto #####
> 
> Loppu <- Sys.time() #Tallennetaan aikaa varten lopetusaika
> Kesto <- Loppu-Alku
> print(paste("Ajaminen kesti ",Kesto))
[1] "Ajaminen kesti  8.43108331759771"
> 
> proc.time()
   user  system elapsed 
 240.17    2.56  528.89 
